# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
Description: Aurora Serverless DB

Parameters:
  DbUserName:
    Type: String
    Default: "nextclouddb"
  DbName:
    Type: String
    Default: "nextclouddb"
  DbClusterName:
    Type: String
    Default: "nextcloudcluster"
  DbMinCapacity:
    Type: Number
    Default: '0.5'
  DbMaxCapacity:
    Type: Number
    Default: '8'
#  FargateSecGroupId:
#    Type: String
#    Default: 'sg-0f6ddbb66dc7ad7a0'

Resources:

  RdsSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: description
      SubnetIds: !Split [',', !ImportValue 'x--v--x-prod-vpc-PrivateSubnets']

  PostgresRdsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: ECS Security Group
      VpcId: !ImportValue 'x--v--x-prod-vpc-VPC'

  PostgresRdsSecurityGroupPostgresInboundFargate1:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref PostgresRdsSecurityGroup
      IpProtocol: tcp
      FromPort: '5432'
      ToPort: '5432'
      CidrIp: !ImportValue 'x--v--x-prod-vpc-PrivateSubnet1CIDR'

  PostgresRdsSecurityGroupPostgresInboundFargate2:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref PostgresRdsSecurityGroup
      IpProtocol: tcp
      FromPort: '5432'
      ToPort: '5432'
      CidrIp: !ImportValue 'x--v--x-prod-vpc-PrivateSubnet2CIDR'

  PostgresRdsCluster:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      DBClusterParameterGroupName:
        Ref: PostgresRdsClusterParameterGroup
      DBSubnetGroupName:
        Ref: RdsSubnetGroup
      DatabaseName: !Ref DbName
      DBClusterIdentifier: !Ref DbClusterName
      Engine: aurora-postgresql
      EngineVersion: '14.6'
      Port: 5432
      ServerlessV2ScalingConfiguration:
        MinCapacity: !Ref DbMinCapacity
        MaxCapacity: !Ref DbMaxCapacity
      VpcSecurityGroupIds:
      - !Ref PostgresRdsSecurityGroup
      MasterUserPassword: '{{resolve:ssm-secure:DBPassword}}'
      MasterUsername: !Ref DbUserName

  PostgresRdsInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
        Engine: aurora-postgresql
        DBInstanceClass: db.serverless
        DBClusterIdentifier: !Ref PostgresRdsCluster

  PostgresRdsClusterParameterGroup:
    Type: 'AWS::RDS::DBClusterParameterGroup'
    Properties:
      Description: "CloudFormation Aurora Cluster Parameter Group"
      Family: aurora-postgresql14
      Parameters:
        timezone: UTC

Outputs:
  DBIdentifier:
    Value: !Ref PostgresRdsCluster
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-DBIdentifier'

  EndpointUrl:
    Value: !GetAtt PostgresRdsCluster.Endpoint.Address
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-EndpointUrl'

  EndpointPort:
    Value: !GetAtt PostgresRdsCluster.Endpoint.Port
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-EndpointPort'

